{"ast":null,"code":"import _regeneratorRuntime from \"/home/widaad/Documents/Wild/Hackathon/Hackathon/Set/views/node_modules/@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"/home/widaad/Documents/Wild/Hackathon/Hackathon/Set/views/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\nimport _classCallCheck from \"/home/widaad/Documents/Wild/Hackathon/Hackathon/Set/views/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/home/widaad/Documents/Wild/Hackathon/Hackathon/Set/views/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/home/widaad/Documents/Wild/Hackathon/Hackathon/Set/views/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/home/widaad/Documents/Wild/Hackathon/Hackathon/Set/views/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/home/widaad/Documents/Wild/Hackathon/Hackathon/Set/views/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/home/widaad/Documents/Wild/Hackathon/Hackathon/Set/views/src/components/GamePage.js\";\nimport React, { Component } from 'react';\nimport axios from 'axios';\n\nvar GamePage =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(GamePage, _Component);\n\n  function GamePage() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, GamePage);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(GamePage)).call.apply(_getPrototypeOf2, [this].concat(args)));\n    _this.state = {\n      allCards: [],\n      gameCards: [],\n      selectedCards: []\n    };\n\n    _this.recordValue = function (e) {\n      var selectedCards = _this.state.selectedCards;\n\n      _this.state.selectedCards.push(e.target.value);\n\n      _this.setState({\n        selectedCards: selectedCards\n      });\n    };\n\n    return _this;\n  }\n\n  _createClass(GamePage, [{\n    key: \"componentDidMount\",\n    value: function () {\n      var _componentDidMount = _asyncToGenerator(\n      /*#__PURE__*/\n      _regeneratorRuntime.mark(function _callee() {\n        var deck, allCards, twelve;\n        return _regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                _context.next = 2;\n                return axios.get('http://localhost:5000');\n\n              case 2:\n                deck = _context.sent;\n                _context.next = 5;\n                return this.setState({\n                  allCards: deck.data\n                });\n\n              case 5:\n                allCards = this.state.allCards;\n                twelve = allCards.splice(0, 12);\n                console.log(\"12\", twelve);\n                console.log(\"allCards\", allCards);\n\n              case 9:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee, this);\n      }));\n\n      function componentDidMount() {\n        return _componentDidMount.apply(this, arguments);\n      }\n\n      return componentDidMount;\n    }()\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this$state = this.state,\n          allCards = _this$state.allCards,\n          selectedCards = _this$state.selectedCards,\n          gameCards = _this$state.gameCards; // const game = (allCards.splice(0,12))\n      // console.log(\"solu\", gameCards)\n\n      console.log(\"game\", this.game);\n      console.log(\"selectedCards\", selectedCards);\n      return (// game.map((card)=>{ return(\n        // <div>\n        // \t{card.code} <button value={card.code} name='cps3' onClick={this.recordValue}>Click to record value</button>\n        // </div>\n        React.createElement(\"div\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 37\n          },\n          __self: this\n        }, \"jj\")\n      );\n    }\n  }]);\n\n  return GamePage;\n}(Component);\n\nexport default GamePage;","map":{"version":3,"sources":["/home/widaad/Documents/Wild/Hackathon/Hackathon/Set/views/src/components/GamePage.js"],"names":["React","Component","axios","GamePage","state","allCards","gameCards","selectedCards","recordValue","e","push","target","value","setState","get","deck","data","twelve","splice","console","log","game"],"mappings":";;;;;;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,KAAP,MAAkB,OAAlB;;IAEMC,Q;;;;;;;;;;;;;;;;;UACJC,K,GAAQ;AACRC,MAAAA,QAAQ,EAAE,EADF;AAENC,MAAAA,SAAS,EAAE,EAFL;AAGNC,MAAAA,aAAa,EAAE;AAHT,K;;UAeRC,W,GAAc,UAACC,CAAD,EAAO;AAAA,UACbF,aADa,GACK,MAAKH,KADV,CACbG,aADa;;AAEnB,YAAKH,KAAL,CAAWG,aAAX,CAAyBG,IAAzB,CAA8BD,CAAC,CAACE,MAAF,CAASC,KAAvC;;AACA,YAAKC,QAAL,CAAc;AAACN,QAAAA,aAAa,EAAbA;AAAD,OAAd;AACD,K;;;;;;;;;;;;;;;;;uBAZkBL,KAAK,CAACY,GAAN,CAAU,uBAAV,C;;;AAAbC,gBAAAA,I;;uBACA,KAAKF,QAAL,CAAc;AAACR,kBAAAA,QAAQ,EAAEU,IAAI,CAACC;AAAhB,iBAAd,C;;;AACEX,gBAAAA,Q,GAAa,KAAKD,K,CAAlBC,Q;AACFY,gBAAAA,M,GAASZ,QAAQ,CAACa,MAAT,CAAgB,CAAhB,EAAkB,EAAlB,C;AACfC,gBAAAA,OAAO,CAACC,GAAR,CAAY,IAAZ,EAAkBH,MAAlB;AACAE,gBAAAA,OAAO,CAACC,GAAR,CAAY,UAAZ,EAAwBf,QAAxB;;;;;;;;;;;;;;;;;;6BASS;AAAA,wBACqC,KAAKD,KAD1C;AAAA,UACDC,QADC,eACDA,QADC;AAAA,UACSE,aADT,eACSA,aADT;AAAA,UACwBD,SADxB,eACwBA,SADxB,EAET;AACA;;AACAa,MAAAA,OAAO,CAACC,GAAR,CAAY,MAAZ,EAAoB,KAAKC,IAAzB;AACAF,MAAAA,OAAO,CAACC,GAAR,CAAY,eAAZ,EAA6Bb,aAA7B;AACE,aACD;AACG;AACH;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AALC;AAQD;;;;EApCoBN,S;;AAuCvB,eAAeE,QAAf","sourcesContent":["import React, { Component } from 'react';\nimport axios from 'axios';\n\nclass GamePage extends Component {\n  state = {\n\t\tallCards: [],\n    gameCards: [],\n    selectedCards: [],\n  }\n\n  async componentDidMount() {\n\t\tconst deck = await axios.get('http://localhost:5000')\n\t\tawait this.setState({allCards: deck.data})\n\t\tconst { allCards } = this.state ;\n\t\tconst twelve = allCards.splice(0,12)\n\t\tconsole.log(\"12\", twelve)\n\t\tconsole.log(\"allCards\", allCards)\n  }\n\n  recordValue = (e) => {\n\t\tconst { selectedCards } = this.state;\n    this.state.selectedCards.push(e.target.value);\n    this.setState({selectedCards})\n  }\n\n  render() {\n\t\tconst { allCards, selectedCards, gameCards} = this.state;\n\t\t// const game = (allCards.splice(0,12))\n\t\t// console.log(\"solu\", gameCards)\n\t\tconsole.log(\"game\", this.game)\n\t\tconsole.log(\"selectedCards\", selectedCards)\n    return (\n\t\t\t// game.map((card)=>{ return(\n      // <div>\n\t\t\t// \t{card.code} <button value={card.code} name='cps3' onClick={this.recordValue}>Click to record value</button>\n\t\t\t// </div>\n\t\t\t<div>jj</div>\n\t\t\t\n    )\n  }\n}\n\nexport default GamePage;\n"]},"metadata":{},"sourceType":"module"}